breakpoint;
//load timer
loadi(4,17);
loadi(5,18);

//load library
loadi(63,13);
loadi(64,14);


//load init
loadi(65,7);
loadi(66,8);

//load int10
loadi(22,35);
loadi(23,36);

//load exception handler
loadi(2,15);
loadi(3,16);

//load int7
loadi(16,29);
loadi(17,30);

//load odd
//loadi(86,69);
//loadi(87,70);

//load scheduler->mod5
loadi(50,63);
loadi(51,64);

//load module 0->resource manager
loadi(40,53);
loadi(41,54);

//load mod4 ->device manager
loadi(48,61);
loadi(49,62);

//load console interrupt
loadi(8,21);
loadi(9,22);

//load int6
loadi(14,27);
loadi(15,28);

//load int9->exec
loadi(20,33);
loadi(21,34);

//load mod1->process manager
loadi(42,55);
loadi(43,56);

//load mod 2->memory manager
loadi(44,57);
loadi(45,58);

//load inode table
loadi(59,3);
loadi(60,4);

//load disk interrupt
loadi(6,19);
loadi(7,20);

[TERMINAL_STATUS_TABLE]=0;


//setting pagetable for init

PTBR=PAGE_TABLE_BASE+20;
PTLR=10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";


//process table for init

[(PROCESS_TABLE+16)+1]=1;//PID
[(PROCESS_TABLE+16)+4]=CREATED;//STATE
[(PROCESS_TABLE+16)+11]=80;//USER AREA PAGE NO
[(PROCESS_TABLE+16)+12]=0;//KTPR
[(PROCESS_TABLE+16)+13]=8*512;//UPTR
[(PROCESS_TABLE+16)+14]=PAGE_TABLE_BASE+20;//PTBR
[(PROCESS_TABLE+16)+15]=10;//PTLR


//setting stack pointer to starting logical address of program
//setting top of the stack to the second header of the program

[76*512]=[65*512+1];

//initialise mem free list 1 for used pages 0 for free
alias i R0;
i=0;
while(i<MAX_MEM_PAGE) do
	if(i<83) then
		[MEMORY_FREE_LIST+i]=1;
	else
		[MEMORY_FREE_LIST+i]=0;
	endif;
	i=i+1;
endwhile;

//initialise wait mem count to 0 memfreecount to no of free pages in System status table

[SYSTEM_STATUS_TABLE+3]=0;//WAIT MEM COUNT
[SYSTEM_STATUS_TABLE+2]=127-83+1;

[DISK_STATUS_TABLE]=0;

//initialise per process table for init

i=496;
while(i<512) do
	[80*512+i]=-1;
	i=i+1;
endwhile;


//PROCESS TABLE ENTERIES FOR OTHER processes
[(PROCESS_TABLE+16*2)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*3)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*4)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*5)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*6)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*7)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*8)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*9)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*10)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*11)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*12)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*13)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*14)+4]=TERMINATED;//STATE
[(PROCESS_TABLE+16*15)+4]=TERMINATED;//STATE



breakpoint;

return;

