breakpoint;
alias fno R1;
alias memfreed R2;
if(fno==GET_FREE_PAGE)then
	breakpoint;
	//inc wait mem count+1;
	[SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]+1;
	while([SYSTEM_STATUS_TABLE+2]==0) do //mem free count==0
		[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_MEM;
		call MOD_5;//call scheduler
	endwhile;
	
	[SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1;
	[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;
	//find a free page in mem free list
	
	alias i R0;
	i=76;
	while(i<128) do
		if([MEMORY_FREE_LIST+i]==0)then
			[MEMORY_FREE_LIST+i]=1;
			break;
		endif;
		i=i+1;
	endwhile;
	R0=i;
	breakpoint;
	return;
endif;

if(fno==RELEASE_PAGE) then
	//R2->PAGE TO BE RELEASED
	breakpoint;
	[MEMORY_FREE_LIST+memfreed]=[MEMORY_FREE_LIST+memfreed]-1;//
	if(([MEMORY_FREE_LIST+memfreed]==0))then
		[SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;
		alias j R4;
		j=0;
		while(j<MAX_PROC_NUM) do
			if(([PROCESS_TABLE+j*16+4]==WAIT_MEM))then
				[PROCESS_TABLE+j*16+4]=READY;
			endif;
			j=j+1;
		endwhile;
	endif;
	breakpoint;
	return;
endif;
return;
